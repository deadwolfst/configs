#!/bin/bash
#find network and it's name with nmcli (NETWORKMANAGER)
barheight=16
str="$(nmcli dev | grep connected)"
interface=$(echo $str | awk '{ print $1; }' )
nettype=$(echo $str | awk '{ print $2; }' )
netname=$(echo $str | awk '{ print $4; }' )
result=''
INTERFACE="$interface"

if [[ ${#str} > 0 ]]
then

    #WI-FI
    #color="#42a538"
    #bars=""
    #if [[ $interface == w* ]]; then
            #bars="$(nmcli dev wifi | grep $netname | awk '{ print $8; }')"
            #[[ ! -d /sys/class/net/${INTERFACE}/wireless ]] ||
            #    [[ "$(cat /sys/class/net/$INTERFACE/operstate)" = 'down' ]] && exit
            #QUALITY=$(grep $INTERFACE /proc/net/wireless | awk '{ print int($3 * 100 / 70) }')
            #if [[ $QUALITY -ge 80 ]]; then color="#42a538"
            #elif [[ $QUALITY -ge 60 ]]; then color="#878a2a"
            #elif [[ $QUALITY -ge 40 ]]; then color="#8a732c"
            #else color="#FF0000"
            #fi
    #fi

    #PRINT $netname and color
    if [[ ! ${#str} < 0 ]]; then 
            if [[ $interface == w* ]]; then
                    bars="$(nmcli dev wifi | grep -- "$netname" | awk '{ print $8; }')"
                    #if you wish you may print $QUALITY with this
                    quality=$(iwconfig wlp2s0 | awk 'BEGIN { FS = "=" } ; /Quality/ {print substr($2, 0, 2) }')
                    color=#00ff00
                    #if [[  $bars = '****' ]]; then quality=100; color="#42a538";
                    #elif [[  $bars = '***' ]]; then quality=75; color="#878a2a";
                    #elif [[  $bars = '**' ]]; then quality=50; color="#8a732c";
                    #elif [[  $bars = '*' ]]; then quality=25; color="#FF0000";
                    #fi
                    #echo $bars
                    result+="^r(10x$(( $quality/(70/$barheight) ))) $netname"
            else
                    result+="$nettype $netname"
            fi
    else
            echo -n net down
            return 0
    fi
    echo -n "$result "

    #BANDWIDTH
    INLABEL=i
    OUTLABEL=o
    if ! [ -e "/sys/class/net/${INTERFACE}/operstate" ] || ! [ "`cat /sys/class/net/${INTERFACE}/operstate`" = "up" ]
    then
        result+="$INTERFACE down"
        result+="$INTERFACE down"
        result+="#FF0000"
        exit 0
    fi
    path="/dev/shm/$(basename $0)-${INTERFACE}"
    read rx < "/sys/class/net/${INTERFACE}/statistics/rx_bytes"
    read tx < "/sys/class/net/${INTERFACE}/statistics/tx_bytes"
    time=$(date +%s)
    if ! [[ -f "${path}" ]]; then
      echo "${time} ${rx} ${tx}" > "${path}"
      chmod 0666 "${path}"
    fi
    read old < "${path}"
    echo "${time} ${rx} ${tx}" > "${path}"
    old=(${old//;/ })
    time_diff=$(( $time - ${old[0]} ))
    [[ "${time_diff}" -gt 0 ]] || exit
    rx_diff=$(( $rx - ${old[1]} ))
    tx_diff=$(( $tx - ${old[2]} ))
    rx_rate=$(( $rx_diff / $time_diff ))
    tx_rate=$(( $tx_diff / $time_diff ))
    # incoming
    echo -n "$INLABEL"
    rx_kib=$(( $rx_rate >> 10 ))
    if hash bc 2>/dev/null && [[ "$rx_rate" -gt 1048576 ]]; then
      printf ' %sm' "`echo "scale=1; $rx_kib / 1024" | bc`"
    else 
      echo -n " ${rx_kib}k"
    fi
    echo -n " "
    # outgoing
    echo -n "$OUTLABEL"
    tx_kib=$(( $tx_rate >> 10 ))
    if hash bc 2>/dev/null && [[ "$tx_rate" -gt 1048576 ]]; then
      printf ' %sm' "`echo "scale=1; $tx_kib / 1024" | bc`"
    else 
      echo -n " ${tx_kib}k"
    fi

else 
    echo "disconnected"
fi
